{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign/sign.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {} // We are going to ask redux if the user session has persisted\n  // This fires every time that some kind of auth state changes\n  // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //     if (userAuth) {\n  //         const userRef = await createUserProfileDocument(userAuth);\n  //\n  //         userRef.onSnapshot(snapshot => {\n  //             setCurrentUser({\n  //                 id: snapshot.id,\n  //                 ...snapshot.data()\n  //             });\n  //         });\n  //     }\n  //     // This sets the currentUser state as null\n  //     setCurrentUser(userAuth);\n  // This is a function made for putting the data used on the shop to firebase.\n  // addCollectionAndDocuments('collections', collectionsArray.map(({title, items}) => ({ title, items})));\n  // });\n  // But when the component unmount, we tell the observable  to stop listening to changes from firebase\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(SignPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","Header","SignPage","CheckoutPage","connect","selectCurrentUser","createStructuredSelector","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;;AAGA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,mBAD8B,GACR,IADQ;AAAA;;AAG9BC,EAAAA,iBAAiB,GAAG,CAqBnB,CArBgB,CACb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;AACJ;AAGJ;;;AACAC,EAAAA,oBAAoB,GAAG;AACnB,SAAKF,mBAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEb,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AACO,MAAA,MAAM,EAAE,MAAM,KAAKU,KAAL,CAAWC,WAAX,GAA0B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAiD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ;AAYH;;AA5C6B;;AAgDlC,MAAMC,eAAe,GAAGT,wBAAwB,CAAC;AAC7CQ,EAAAA,WAAW,EAAET;AADgC,CAAD,CAAhD;AAIA,eAAeD,OAAO,CAACW,eAAD,CAAP,CAAyBR,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign/sign.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\n\nimport {connect} from 'react-redux'\nimport {selectCurrentUser} from \"./redux/user/user.selectors\";\nimport {createStructuredSelector} from \"reselect\";\n\n\nclass App extends React.Component {\n    unsubscribeFromAuth = null;\n\n    componentDidMount() {\n        // We are going to ask redux if the user session has persisted\n\n        // This fires every time that some kind of auth state changes\n        // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        //     if (userAuth) {\n        //         const userRef = await createUserProfileDocument(userAuth);\n        //\n        //         userRef.onSnapshot(snapshot => {\n        //             setCurrentUser({\n        //                 id: snapshot.id,\n        //                 ...snapshot.data()\n        //             });\n        //         });\n        //     }\n        //     // This sets the currentUser state as null\n        //     setCurrentUser(userAuth);\n\n            // This is a function made for putting the data used on the shop to firebase.\n            // addCollectionAndDocuments('collections', collectionsArray.map(({title, items}) => ({ title, items})));\n        // });\n    }\n\n    // But when the component unmount, we tell the observable  to stop listening to changes from firebase\n    componentWillUnmount() {\n        this.unsubscribeFromAuth();\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <Switch>\n                    <Route exact path='/' component={HomePage}/>\n                    <Route path='/shop' component={ShopPage}/>\n                    <Route exact path='/checkout' component={CheckoutPage}/>\n                    <Route exact path='/sign'\n                           render={() => this.props.currentUser ? (<Redirect to='/'/>) : (<SignPage/>)}/>\n                </Switch>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}