{"ast":null,"code":"import _objectWithoutProperties from \"/home/wesaka/WebstormProjects/crwn-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\"; // This is a higher order component, that wraps some component and in this case, shows it or the loading spinner\n\nconst WithSpinner = WrappedComponent => (_ref) => {\n  let isLoading = _ref.isLoading,\n      otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n  return isLoading ? React.createElement(SpinnerOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(SpinnerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })) : // This way we can pass everything useful for the other component\n  React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD,C,CAEA;;AACA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,UAAgC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAhBC,UAAgB;;AACpE,SAAOD,SAAS,GACZ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADY,GAKZ;AACA,sBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANJ;AAQH,CATD;;AAWA,eAAeH,WAAf","sourcesContent":["import React from \"react\";\n\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n\n// This is a higher order component, that wraps some component and in this case, shows it or the loading spinner\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer/>\n        </SpinnerOverlay>\n    ) : (\n        // This way we can pass everything useful for the other component\n        <WrappedComponent {...otherProps}/>\n    )\n};\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}