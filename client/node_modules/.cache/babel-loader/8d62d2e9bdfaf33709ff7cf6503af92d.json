{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/sign-up/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { SigninContainer, TitleContainer } from \"../sign-in/sign-in.styles\";\nimport { emailSignInStart, signUpStart } from \"../../redux/user/user.actions\"; // I'll be reusing the styles from signin as they are identical\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      signUpStart(displayName, email, password, confirmPassword); // if (password !== confirmPassword) {\n      //     alert(\"Passwords don't match!\");\n      //     return;\n      // }\n      //\n      // try {\n      //     const {user} = await auth.createUserWithEmailAndPassword(email, password);\n      //     createUserProfileDocument(user, displayName);\n      // } catch (e) {\n      //     console.error(e);\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(SigninContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TitleContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","CustomButton","FormInput","auth","createUserProfileDocument","SigninContainer","TitleContainer","emailSignInStart","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport {auth, createUserProfileDocument} from \"../../firebase/firebase.utils\";\nimport {SigninContainer, TitleContainer} from \"../sign-in/sign-in.styles\";\nimport {emailSignInStart, signUpStart} from \"../../redux/user/user.actions\"; // I'll be reusing the styles from signin as they are identical\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        signUpStart(displayName, email, password, confirmPassword);\n\n        // if (password !== confirmPassword) {\n        //     alert(\"Passwords don't match!\");\n        //     return;\n        // }\n        //\n        // try {\n        //     const {user} = await auth.createUserWithEmailAndPassword(email, password);\n        //     createUserProfileDocument(user, displayName);\n        // } catch (e) {\n        //     console.error(e);\n        // }\n    };\n\n    handleChange = event => {\n        const {name, value} = event.target;\n\n        this.setState({[name]: value});\n    };\n\n    render() {\n        const {displayName, email, password, confirmPassword} = this.state;\n\n        return (\n            <SigninContainer>\n                <TitleContainer>I do not have an account</TitleContainer>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={this.handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={this.handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={this.handleChange}\n                        label='Confirm Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </SigninContainer>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password, confirmPassword) => dispatch(\n        signUpStart({displayName, email, password, confirmPassword})\n    )\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}