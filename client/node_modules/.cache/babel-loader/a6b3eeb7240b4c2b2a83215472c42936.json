{"ast":null,"code":"// This file is used to set up store in redux and redux-persist\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nimport rootReducer from './root.reducer';\nimport rootSaga from \"./root.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["// This file is used to set up store in redux and redux-persist\nimport {createStore, applyMiddleware} from \"redux\";\nimport {persistStore} from \"redux-persist\";\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\n\nimport rootReducer from './root.reducer';\nimport rootSaga from \"./root.sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}