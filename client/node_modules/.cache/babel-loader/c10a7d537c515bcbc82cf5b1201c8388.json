{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\"; // We have access to the match object here because we are using a route component in App.js to arrive here\n// Match.path allows us to route to a new page without having to worry about the url so far\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  // Remember to access the redux function that is being passed on mapDispatchToProps\n  // The sole purpose of the component is to initialize the start to fetching data and render the components\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); // And here to access the isCollectionFetching prop being passed on mapStateToProps\n\n  return (// Here we swapped the WithSpinner component for the container, as all variables are handled there\n    React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,qBAAF;AAAyBI,EAAAA;AAAzB,CAAD,KAAsC;AACnD;AACA;AACAP,EAAAA,SAAS,CAAE,MAAM;AACbG,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT,CAHmD,CAOnD;;AACA,SACI;AACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAAjC;AACO,MAAA,SAAS,EAAEJ,4BADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AACO,MAAA,SAAS,EAAEH,uBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAFJ;AAUH,CAlBD;;AAoBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n// We have access to the match object here because we are using a route component in App.js to arrive here\n// Match.path allows us to route to a new page without having to worry about the url so far\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n    // Remember to access the redux function that is being passed on mapDispatchToProps\n    // The sole purpose of the component is to initialize the start to fetching data and render the components\n    useEffect( () => {\n        fetchCollectionsStart();\n    }, [fetchCollectionsStart]);\n\n    // And here to access the isCollectionFetching prop being passed on mapStateToProps\n    return (\n        // Here we swapped the WithSpinner component for the container, as all variables are handled there\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`}\n                   component={CollectionsOverviewContainer}/>\n\n            <Route path={`${match.path}/:collectionId`}\n                   component={CollectionPageContainer}/>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}