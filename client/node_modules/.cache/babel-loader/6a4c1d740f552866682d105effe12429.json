{"ast":null,"code":"import _slicedToArray from \"/home/wesaka/WebstormProjects/crwn-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { SigninContainer, TitleContainer } from \"../sign-in/sign-in.styles\";\nimport { signUpStart } from \"../../redux/user/user.actions\"; // I'll be reusing the styles from signin as they are identical\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n    signUpStart(displayName, email, password, confirmPassword);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(SigninContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","SigninContainer","TitleContainer","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","state","handleChange","target","name","value","setState","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SAAQC,eAAR,EAAyBC,cAAzB,QAA8C,2BAA9C;AACA,SAASC,WAAT,QAA4B,+BAA5B,C,CAA6D;;AAE7D,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAqB;AAAA,oBACgBN,QAAQ,CAAC;AACrDQ,IAAAA,WAAW,EAAE,EADwC;AAErDC,IAAAA,KAAK,EAAE,EAF8C;AAGrDC,IAAAA,QAAQ,EAAE,EAH2C;AAIrDC,IAAAA,eAAe,EAAE;AAJoC,GAAD,CADxB;AAAA;AAAA,QACxBC,eADwB;AAAA,QACPC,kBADO;;AAQhC,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AADgC,wBAG0B,KAAKC,KAH/B;AAAA,UAGxBT,WAHwB,eAGxBA,WAHwB;AAAA,UAGXC,KAHW,eAGXA,KAHW;AAAA,UAGJC,QAHI,eAGJA,QAHI;AAAA,UAGMC,eAHN,eAGMA,eAHN;AAKhCL,IAAAA,WAAW,CAACE,WAAD,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,eAA/B,CAAX;AACH,GAND;;AAQA,QAAMO,YAAY,GAAGH,KAAK,IAAI;AAAA,0BACJA,KAAK,CAACI,MADF;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;AAG1B,SAAKC,QAAL,CAAc;AAAC,OAACF,IAAD,GAAQC;AAAT,KAAd;AACH,GAJD;;AAMA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAE,KAAKP,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,KAAK,EAAEN,WAHX;AAII,IAAA,QAAQ,EAAE,KAAKU,YAJnB;AAKI,IAAA,KAAK,EAAC,cALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAET,KAHX;AAII,IAAA,QAAQ,EAAE,KAAKS,YAJnB;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAER,QAHX;AAII,IAAA,QAAQ,EAAE,KAAKQ,YAJnB;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAyBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,iBAFT;AAGI,IAAA,KAAK,EAAEP,eAHX;AAII,IAAA,QAAQ,EAAE,KAAKO,YAJnB;AAKI,IAAA,KAAK,EAAC,kBALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAiCI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCJ,CAHJ,CADJ;AA0CH,CAhED;;AAkEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,WAAW,EAAE,CAACE,WAAD,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,eAA/B,KAAmDa,QAAQ,CACpElB,WAAW,CAAC;AAACE,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAD,CADyD;AADpC,CAAL,CAAnC;;AAMA,eAAeV,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport { connect } from 'react-redux';\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport {SigninContainer, TitleContainer} from \"../sign-in/sign-in.styles\";\nimport { signUpStart } from \"../../redux/user/user.actions\"; // I'll be reusing the styles from signin as they are identical\n\nconst SignUp = ({ signUpStart }) => {\n    const [ userCredentials, setUserCredentials ] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n        const { displayName, email, password, confirmPassword } = this.state;\n\n        signUpStart(displayName, email, password, confirmPassword);\n    };\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n\n        this.setState({[name]: value});\n    };\n\n    return (\n        <SigninContainer>\n            <TitleContainer>I do not have an account</TitleContainer>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </SigninContainer>\n    )\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password, confirmPassword) => dispatch(\n        signUpStart({displayName, email, password, confirmPassword})\n    )\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}