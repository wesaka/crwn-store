{"ast":null,"code":"// This container is a higher order component that is going to wrap around everything that needs state\n// The purpose of the container is to interact with redux so the component doesn't have to\n// The goal of the component itself is to render the component\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\"; // Here, as we are going to wrap around a component, just name the prop accordingly to what the component is expecting\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n}); // Compose just wraps around components the same way we are used to, but with the explicit declarations\n// It evaluates right to left\n\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","createStructuredSelector","compose","selectIsCollectionFetching","WithSpinner","CollectionsOverview","mapStateToProps","isLoading","CollectionsOverviewContainer"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC,C,CAEA;;AACA,MAAMC,eAAe,GAAGL,wBAAwB,CAAC;AAC7CM,EAAAA,SAAS,EAAEJ;AADkC,CAAD,CAAhD,C,CAIA;AACA;;AACA,MAAMK,4BAA4B,GAAGN,OAAO,CAACF,OAAO,CAACM,eAAD,CAAR,EAA2BF,WAA3B,CAAP,CAA+CC,mBAA/C,CAArC;AAEA,eAAeG,4BAAf","sourcesContent":["// This container is a higher order component that is going to wrap around everything that needs state\n// The purpose of the container is to interact with redux so the component doesn't have to\n// The goal of the component itself is to render the component\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\n\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\n// Here, as we are going to wrap around a component, just name the prop accordingly to what the component is expecting\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n});\n\n// Compose just wraps around components the same way we are used to, but with the explicit declarations\n// It evaluates right to left\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;"]},"metadata":{},"sourceType":"module"}