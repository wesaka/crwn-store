{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/header/header.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CartIcon from \"../cart-icon/cart-icon.component\";\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\nimport { selectCartHidden } from \"../../redux/cart/cart.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport { HeaderContainer, LogoContainer, OptionsContainer, OptionLink } from './header.styles';\nimport { signOutStart } from \"../../redux/user/user.actions\";\n\nconst Header = ({\n  currentUser,\n  hidden,\n  signOutStart\n}) => React.createElement(HeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(LogoContainer, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})), React.createElement(OptionsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(OptionLink, {\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(OptionLink, {\n  to: \"/contact\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? // This ~to='/'~ doesn't do absolutely nothing, as I'm using ~as='div'~\n// But it wouldn't stop bothering me about it being empty\nReact.createElement(OptionLink, {\n  to: \"/\",\n  as: \"div\",\n  onClick: signOutStart,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(OptionLink, {\n  to: \"/sign\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n})), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})); // State is the top level root reducer\n// This is what turns the state into props (map to props duh)\n// Dont forget to access the props in the declaration - this case const Header\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/header/header.component.jsx"],"names":["React","connect","createStructuredSelector","CartIcon","CartDropdown","selectCartHidden","selectCurrentUser","HeaderContainer","LogoContainer","OptionsContainer","OptionLink","signOutStart","Header","currentUser","hidden","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;;AAGA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,gBAAxC,EAA0DC,UAA1D,QAA2E,iBAA3E;AACA,SAAQC,YAAR,QAA2B,+BAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,MAAd;AAAsBH,EAAAA;AAAtB,CAAD,KACX,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAII,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAQQE,WAAW,GACP;AACA;AACC,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,GAAf;AAAmB,EAAA,EAAE,EAAC,KAAtB;AAA4B,EAAA,OAAO,EAAEF,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHM,GAKN,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbb,EAeI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfJ,CAJJ,EAuBQG,MAAM,GAAG,IAAH,GAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvBxB,CADJ,C,CA6BA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAGb,wBAAwB,CAAC;AAC7CW,EAAAA,WAAW,EAAEP,iBADgC;AAE7CQ,EAAAA,MAAM,EAAET;AAFqC,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,YAAY,EAAE,MAAMM,QAAQ,CAACN,YAAY,EAAb;AADQ,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\n\nimport CartIcon from \"../cart-icon/cart-icon.component\";\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\nimport {selectCartHidden} from \"../../redux/cart/cart.selectors\";\nimport {selectCurrentUser} from \"../../redux/user/user.selectors\";\n\nimport {ReactComponent as Logo} from \"../../assets/crown.svg\";\nimport {HeaderContainer, LogoContainer, OptionsContainer, OptionLink} from './header.styles';\nimport {signOutStart} from \"../../redux/user/user.actions\";\n\nconst Header = ({currentUser, hidden, signOutStart}) => (\n    <HeaderContainer>\n        <LogoContainer to='/'>\n            <Logo className='logo'/>\n        </LogoContainer>\n        <OptionsContainer>\n            <OptionLink to='/shop'>\n                SHOP\n            </OptionLink>\n            <OptionLink to='/contact'>\n                CONTACT\n            </OptionLink>\n            {\n                currentUser ?\n                    // This ~to='/'~ doesn't do absolutely nothing, as I'm using ~as='div'~\n                    // But it wouldn't stop bothering me about it being empty\n                    (<OptionLink to='/' as='div' onClick={signOutStart}>SIGN OUT</OptionLink>)\n                    :\n                    (<OptionLink to='/sign'>SIGN IN</OptionLink>)\n            }\n            <CartIcon/>\n\n        </OptionsContainer>\n        {\n            hidden ? null : <CartDropdown/>\n        }\n    </HeaderContainer>\n);\n\n// State is the top level root reducer\n// This is what turns the state into props (map to props duh)\n// Dont forget to access the props in the declaration - this case const Header\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n    hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOutStart: () => dispatch(signOutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}