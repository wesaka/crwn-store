{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign/sign.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { checkUserSession } from \"./redux/user/user.actions\";\nimport { createStructuredSelector } from \"reselect\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const checkUserSession = this.props.checkUserSession;\n    checkUserSession();\n  } // But when the component unmount, we tell the observable  to stop listening to changes from firebase\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }) : React.createElement(SignPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps())(App);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","Header","SignPage","CheckoutPage","connect","selectCurrentUser","checkUserSession","createStructuredSelector","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;;AAGA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,mBAD8B,GACR,IADQ;AAAA;;AAG9BC,EAAAA,iBAAiB,GAAG;AAAA,UACRL,gBADQ,GACa,KAAKM,KADlB,CACRN,gBADQ;AAEhBA,IAAAA,gBAAgB;AACnB,GAN6B,CAQ9B;;;AACAO,EAAAA,oBAAoB,GAAG;AACnB,SAAKH,mBAAL;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEf,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AACO,MAAA,MAAM,EAAE,MAAM,KAAKS,KAAL,CAAWG,WAAX,GAA0B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAiD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ;AAYH;;AA1B6B;;AA8BlC,MAAMC,eAAe,GAAGT,wBAAwB,CAAC;AAC7CQ,EAAAA,WAAW,EAAEV;AADgC,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,gBAAgB,EAAE,MAAMY,QAAQ,CAACZ,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACY,eAAD,EAAkBC,kBAAkB,EAApC,CAAP,CAA+CT,GAA/C,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign/sign.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\n\nimport {connect} from 'react-redux'\n\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { checkUserSession } from \"./redux/user/user.actions\";\n\nimport {createStructuredSelector} from \"reselect\";\n\n\nclass App extends React.Component {\n    unsubscribeFromAuth = null;\n\n    componentDidMount() {\n        const { checkUserSession } = this.props;\n        checkUserSession();\n    }\n\n    // But when the component unmount, we tell the observable  to stop listening to changes from firebase\n    componentWillUnmount() {\n        this.unsubscribeFromAuth();\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <Switch>\n                    <Route exact path='/' component={HomePage}/>\n                    <Route path='/shop' component={ShopPage}/>\n                    <Route exact path='/checkout' component={CheckoutPage}/>\n                    <Route exact path='/sign'\n                           render={() => this.props.currentUser ? (<Redirect to='/'/>) : (<SignPage/>)}/>\n                </Switch>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n    checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps())(App);\n"]},"metadata":{},"sourceType":"module"}