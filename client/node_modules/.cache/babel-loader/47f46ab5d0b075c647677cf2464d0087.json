{"ast":null,"code":"import _objectSpread from \"/home/wesaka/WebstormProjects/crwn-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport UserActionTypes from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}; // We pass the INITIAL_STATE as the default value for the state in userReducer\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        error: null\n      });\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: null\n      });\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,KAAK,EAAE;AAFW,CAAtB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAe,CAACQ,eAArB;AACI,+BAEOH,KAFP;AAGIH,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAHxB;AAIIN,QAAAA,KAAK,EAAE;AAJX;;AAOJ,SAAKH,eAAe,CAACU,gBAArB;AACI,+BACOL,KADP;AAEIH,QAAAA,WAAW,EAAE;AAFjB;;AAKJ,SAAKF,eAAe,CAACW,eAArB;AACA,SAAKX,eAAe,CAACY,gBAArB;AACI,+BACOP,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFlB;;AAKJ;AACI,aAAOJ,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n    currentUser: null,\n    error: null\n};\n\n// We pass the INITIAL_STATE as the default value for the state in userReducer\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SIGN_IN_SUCCESS:\n            return {\n                // Always spread all the state first, for then setting the desired state\n                ...state,\n                currentUser: action.payload,\n                error: null\n            };\n\n        case UserActionTypes.SIGN_OUT_SUCCESS:\n            return {\n                ...state,\n                currentUser: null\n            };\n\n        case UserActionTypes.SIGN_IN_FAILURE:\n        case UserActionTypes.SIGN_OUT_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}