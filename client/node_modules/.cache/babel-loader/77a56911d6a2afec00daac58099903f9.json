{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\"; // We have access to the match object here because we are using a route component in App.js to arrive here\n// Match.path allows us to route to a new page without having to worry about the url so far\n\nclass ShopPage extends Component {\n  // Remember to access the redux function that is being passed on mapDispatchToProps\n  // The sole purpose of the component is to initialize the start to fetching data and render the components\n  componentDidMount() {\n    const fetchCollectionsStart = this.props.fetchCollectionsStart;\n    fetchCollectionsStart();\n  } // And here to access the isCollectionFetching prop being passed on mapStateToProps\n\n\n  render() {\n    const match = this.props.match;\n    return (// Here we swapped the WithSpinner component for the container, as all variables are handled there\n      React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), \"}/>\", React.createElement(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch","fetchCollectionsStartAsync"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CACA;AACA;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7B;AACA;AACAO,EAAAA,iBAAiB,GAAG;AAAA,UACRJ,qBADQ,GACkB,KAAKK,KADvB,CACRL,qBADQ;AAEhBA,IAAAA,qBAAqB;AACxB,GAN4B,CAQ7B;;;AACAM,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKF,KADlB,CACGE,KADH;AAGL,WACI;AACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AACO,QAAA,SAAS,EAAEP,4BADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,SAII,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,gBAA3B;AACO,QAAA,SAAS,EAAEN,uBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAFJ;AAUH;;AAtB4B;;AAyBjC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,qBAAqB,EAAE,MAAMU,QAAQ,CAACC,0BAA0B,EAA3B;AADD,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,QAAlC,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n// We have access to the match object here because we are using a route component in App.js to arrive here\n// Match.path allows us to route to a new page without having to worry about the url so far\nclass ShopPage extends Component {\n    // Remember to access the redux function that is being passed on mapDispatchToProps\n    // The sole purpose of the component is to initialize the start to fetching data and render the components\n    componentDidMount() {\n        const { fetchCollectionsStart } = this.props;\n        fetchCollectionsStart();\n    }\n\n    // And here to access the isCollectionFetching prop being passed on mapStateToProps\n    render() {\n        const { match } = this.props;\n\n        return (\n            // Here we swapped the WithSpinner component for the container, as all variables are handled there\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`}\n                       component={CollectionsOverviewContainer}/>}/>\n\n                <Route path={`${match.path}/:collectionId`}\n                       component={CollectionPageContainer}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}