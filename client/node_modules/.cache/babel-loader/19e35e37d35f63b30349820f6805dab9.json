{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\n\nconst CartDropdown = ({\n  cartItems\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}))), React.createElement(CustomButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"CHECKOUT\")); // Map dispatch to props is used to turn things into state\n// Map state to props is used to turn things into props, to read states\n\n\nconst mapStateToProps = state => ({\n  // This name right here is what is used in props\n  // We are also using reselect selectors here, so the whole component doesn't need to be re-rendered every time something changes in the application\n  cartItems: selectCartItems(state)\n});\n\nexport default connect(mapStateToProps)(CartDropdown);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CustomButton","CartItem","selectCartItems","CartDropdown","cartItems","map","cartItem","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,6BAAP;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACMA,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CADN,CADJ,EAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,C,CAUA;AACA;;;AACA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9B;AACA;AACAL,EAAAA,SAAS,EAAEF,eAAe,CAACO,KAAD;AAHI,CAAL,CAA7B;;AAMA,eAAeV,OAAO,CAACS,eAAD,CAAP,CAAyBL,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\n\nimport './cart-dropdown.styles.scss'\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\n\nconst CartDropdown = ({cartItems}) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            { cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem}/>) }\n        </div>\n        <CustomButton>CHECKOUT</CustomButton>\n    </div>\n);\n\n\n// Map dispatch to props is used to turn things into state\n// Map state to props is used to turn things into props, to read states\nconst mapStateToProps = state => ({\n    // This name right here is what is used in props\n    // We are also using reselect selectors here, so the whole component doesn't need to be re-rendered every time something changes in the application\n    cartItems: selectCartItems(state)\n});\n\nexport default connect(mapStateToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}