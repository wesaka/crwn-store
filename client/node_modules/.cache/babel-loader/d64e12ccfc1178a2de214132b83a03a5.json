{"ast":null,"code":"var _jsxFileName = \"/home/wesaka/WebstormProjects/crwn-store/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { CartIconContainer, ItemCountContainer, ShoppingIconContainer } from \"./cart-icon.styles\"; // Remember to pass the action as props for the component\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => React.createElement(CartIconContainer, {\n  onClick: toggleCartHidden,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(ShoppingIconContainer, {\n  className: \"shopping-icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(ItemCountContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, itemCount));\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  // Reduce is kinda like a nested foreach loop to read and sum all the cartItems quantities\n  // Again, remember to pass this value as props\n  // Here, we are using a selector (Memoized selector provided by reselect), and we have to pass the whole state for it\n  itemCount: selectCartItemsCount\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/home/wesaka/WebstormProjects/crwn-store/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","createStructuredSelector","CartIconContainer","ItemCountContainer","ShoppingIconContainer","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,qBAA/C,QAA2E,oBAA3E,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACN,EAAAA,gBAAD;AAAmBO,EAAAA;AAAnB,CAAD,KACb,oBAAC,iBAAD;AAAmB,EAAA,OAAO,EAAEP,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,qBAAD;AAAuB,EAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBO,SAArB,CAFJ,CADJ;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,gBAAgB,EAAE,MAAMS,QAAQ,CAACT,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAKA,MAAMU,eAAe,GAAGR,wBAAwB,CAAC;AAC7C;AACA;AACA;AACAK,EAAAA,SAAS,EAAEN;AAJkC,CAAD,CAAhD;AAOA,eAAeF,OAAO,CAACW,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\n\nimport {createStructuredSelector} from \"reselect\";\nimport {CartIconContainer, ItemCountContainer, ShoppingIconContainer} from \"./cart-icon.styles\";\n\n// Remember to pass the action as props for the component\nconst CartIcon = ({toggleCartHidden, itemCount }) => (\n    <CartIconContainer onClick={toggleCartHidden}>\n        <ShoppingIconContainer className='shopping-icon'/>\n        <ItemCountContainer>{itemCount}</ItemCountContainer>\n    </CartIconContainer>\n);\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n\n});\n\nconst mapStateToProps = createStructuredSelector({\n    // Reduce is kinda like a nested foreach loop to read and sum all the cartItems quantities\n    // Again, remember to pass this value as props\n    // Here, we are using a selector (Memoized selector provided by reselect), and we have to pass the whole state for it\n    itemCount: selectCartItemsCount\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);"]},"metadata":{},"sourceType":"module"}